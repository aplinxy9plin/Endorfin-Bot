const Telegraf = require('telegraf')
const Markup = require('telegraf/markup')
const Extra = require('telegraf/extra')

var moment = require('moment');
moment.locale('ru');

var mysql = require('mysql');

var empty = require('is-empty');

var con = mysql.createConnection({
  host: "localhost",
  user: "top4ek",
  password: "q2w3e4r5",
  database: "telegram"
});

con.connect(function(err) {
  if (err) throw err;
  con.query("SELECT * FROM coffee", function (err, result, fields) {
    if (err) throw err;
    //global.status = result[1].count;
    console.log('Connect to database is successful');
  });
});

// –î–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç–∫—É–¥–∞
const shippingOptions = [
  {
    id: 'first',
    title: '–ù–∞—Ö–∏–º–æ–≤–∞ 30',
    prices: [{ label: 'Unicorn', amount: 0 }]
  },
  {
    id: 'second',
    title: '–ë–µ–ª–∏–Ω—Å–∫–æ–≥–æ 51',
    prices: [{ label: 'Slowpoke', amount: 0 }]
  }
]

// –ù–∏—á–µ –Ω–µ –Ω–∞–¥–æ - —Ü–∏–∫–ª –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π

const black = ['–ù–∞–∑–∞–¥','–ê–º–µ—Ä–∏–∫–∞–Ω–æ 55‚ÇΩ','–î–≤–æ–π–Ω–æ–π 99‚ÇΩ','–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ —Å –º–æ–∂–µ–≤–µ–ª—å–Ω–∏–∫–æ–º 119‚ÇΩ','–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ —Å –∫–∞—Ä–¥–∞–º–æ–Ω–æ–º 119‚ÇΩ', '–≠—Å–ø—Ä–µ—Å—Å–æ 89‚ÇΩ', '–î–æ–ø–∏–æ 99‚ÇΩ']
const classic = ['–ù–∞–∑–∞–¥','–ú–∞–ª–µ–Ω—å–∫–∏–π –ª–∞—Ç—Ç–µ 99‚ÇΩ','–ë–æ–ª—å—à–æ–π –ª–∞—Ç—Ç–µ 129‚ÇΩ','–ú–∞–ª–µ–Ω—å–∫–∏–π –ö–∞–ø—É—á–∏–Ω–æ 89‚ÇΩ','–ë–æ–ª—å—à–æ–π –ö–∞–ø—É—á–∏–Ω–æ 119‚ÇΩ','–†–∞—Ñ 149‚ÇΩ','–§–ª—ç—Ç —É–∞–π—Ç 119‚ÇΩ','–°–æ–µ–≤—ã–π –ª–∞—Ç—Ç–µ –º–∞–ª—ã–π 100‚ÇΩ','–°–æ–µ–≤—ã–π –ª–∞—Ç—Ç–µ –±–æ–ª—å—à–æ–π 200‚ÇΩ']
const author = ['–ù–∞–∑–∞–¥','–õ–∞–≤–∞–Ω–¥–æ–≤—ã–π —Ä–∞—Ñ 159‚ÇΩ','–†–æ–∑–æ–≤—ã–π –º—É–∂—Å–∫–æ–π –ª–∞—Ç—Ç–µ 159‚ÇΩ','–ú–µ–¥–æ–≤–æ-–∏–º–±–∏—Ä–Ω—ã–π –∫–∞–ø—É—á–∏–Ω–æ 159‚ÇΩ','–ö–æ–∫–æ–ª–∞—Ç—Ç–µ 159‚ÇΩ','–ò–º–±–∏—Ä–Ω–æ-–∂–∞—Å–º–∏–Ω–æ–≤—ã–π –ª–∞—Ç—Ç–µ 159‚ÇΩ','–ö–µ–¥—Ä–æ–≤—ã–π –ª–∞—Ç—Ç–µ –º–∞–ª–µ–Ω—å–∫–∏–π 149‚ÇΩ','–ö–µ–¥—Ä–æ–≤—ã–π –ª–∞—Ç—Ç–µ –±–æ–ª—å—à–æ–π 199‚ÇΩ','–¶–∏—Ç—Ä—É—Å–æ–≤—ã–π —Ä–∞—Ñ –º–∞–ª–µ–Ω—å–∫–∏–π 149‚ÇΩ','–¶–∏—Ç—Ä—É—Å–æ–≤—ã–π —Ä–∞—Ñ –±–æ–ª—å—à–æ–π 199‚ÇΩ','–ö–ª–∞—É–¥ –ß–°–ú –º–∞–ª–µ–Ω—å–∫–∏–π 149‚ÇΩ','–ö–ª–∞—É–¥ –ß–°–ú –±–æ–ª—å—à–æ–π 199‚ÇΩ','–ö—Ä–µ–º –±—Ä—é–ª–µ –º–∞–ª–µ–Ω—å–∫–∏–π 149‚ÇΩ','–ö—Ä–µ–º –±—Ä—é–ª–µ –±–æ–ª—å—à–æ–π 199‚ÇΩ','–ü—Ä–æ–≤–∞–Ω—Å–∫–∏–π –ª–∞—Ç—Ç–µ 159‚ÇΩ','–ì—Ä—É—à–µ–≤–∞—è —Å–∞–º–±—É–∫–∞ 159‚ÇΩ','–†–∞—Ñ—Ç –ª–µ–º–æ–Ω–≥—Ä–∞—Å—Å 199‚ÇΩ']
const chocolate = ['–ù–∞–∑–∞–¥','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ 99‚ÇΩ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ —Å –∑–µ—Ñ–∏—Ä–∫–∞–º–∏ 130‚ÇΩ','–ö–∞–∫–∞–æ 109‚ÇΩ','–ö–∞–∫–∞–æ —Å –∑–µ—Ñ–∏—Ä–∫–∞–º–∏ 140‚ÇΩ','–Ø–≥–æ–¥–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫: –±—Ä—É—Å–Ω–∏–∫–∞ —Å –º—è—Ç–æ–π 89‚ÇΩ','–Ø–≥–æ–¥–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫: –æ–±–ª–∏–ø–∏—Ö–∞ —Å –º–æ–∂–µ–≤–µ–ª—å–Ω–∏–∫–æ–º 89‚ÇΩ']
const alternative =['–ù–∞–∑–∞–¥','–ö–æ–ª–¥–±—Ä—é 199‚ÇΩ','–ü—É—Ä–æ–≤–µ—Ä (V60) 159‚ÇΩ','–ö–µ–º–µ–∫—Å 159‚ÇΩ','–ê—ç—Ä–æ–ø—Ä–µ—Å—Å 159‚ÇΩ']
const soeviy = ['–ù–∞–∑–∞–¥','–°–æ–µ–≤—ã–π –ª–∞—Ç—Ç–µ –º–∞–ª–µ–Ω—å–∫–∏–π 140‚ÇΩ','–°–æ–µ–≤—ã–π –ª–∞—Ç—Ç–µ –±–æ–ª—å—à–æ–π 190‚ÇΩ','–°–æ–µ–≤—ã–π –ö–∞–ø—É—á–∏–Ω–æ –º–∞–ª–µ–Ω—å–∫–∏–π 130‚ÇΩ','–°–æ–µ–≤—ã–π –ö–∞–ø—É—á–∏–Ω–æ –±–æ–ª—å—à–æ–π 180‚ÇΩ','–°–æ–µ–≤—ã–π –ö–æ–∫–æ–ª–∞—Ç—Ç–µ –º—è—Ç–∞ 249‚ÇΩ','–°–æ–µ–≤—ã–π –ö–æ–∫–æ–ª–∞—Ç—Ç–µ —à–æ–∫–æ–ª–∞–¥ 249‚ÇΩ','–ö–µ–¥—Ä–æ–≤—ã–π –ª–∞—Ç—Ç–µ –Ω–∞ —Å–æ–µ –º–∞–ª–µ–Ω—å–∫–∏–π 199‚ÇΩ','–ö–µ–¥—Ä–æ–≤—ã–π –ª–∞—Ç—Ç–µ –Ω–∞ —Å–æ–µ –±–æ–ª—å—à–æ–π 249‚ÇΩ']
const syrop = ['–ù–∞–∑–∞–¥','–ò—Ä–ª–∞–Ω–¥—Å–∫–∏–π –∫—Ä–µ–º 21‚ÇΩ','–ö–∞—Ä–∞–º–µ–ª—å 21‚ÇΩ','–ö–æ–∫–æ—Å 21‚ÇΩ','–®–æ–∫–æ–ª–∞–¥ 21‚ÇΩ','–ú—è—Ç–∞ 21‚ÇΩ','–í–∞–Ω–∏–ª—å 21‚ÇΩ','–ê–º–∞—Ä–µ—Ç—Ç–æ 21‚ÇΩ','–Ø–±–ª–æ—á–Ω—ã–π –ø–∏—Ä–æ–≥ 21‚ÇΩ','–õ–µ—Å–Ω–æ–π –æ—Ä–µ—Ö 21‚ÇΩ','–°–ø–∞—Å–∏–±–æ, –Ω–∏—á–µ–≥–æ']
const addons = ['–ù–∞–∑–∞–¥','–î–æ–±–∞–≤–∏—Ç—å —Å–∏—Ä–æ–ø','1 –ª–æ–∂–∫–∞ —Å–∞—Ö–∞—Ä–∞','2 –ª–æ–∂–∫–∏ —Å–∞—Ö–∞—Ä–∞','3 –ª–æ–∂–∫–∏ —Å–∞—Ö–∞—Ä–∞','–ü–æ–≥–æ—Ä—è—á–µ–µ','–ö–æ—Ä–∏—Ü–∞ –¥–ª—è –∑–∞–ø–∞—Ö–∞','–ö–æ—Ä–∏—Ü–∞ –¥–ª—è –≤–∫—É—Å–∞','–ú—É—Å–∫–∞—Ç–Ω—ã–π –æ—Ä–µ—Ö','–ú–µ–¥ 31‚ÇΩ','–ú–æ–ª–æ–∫–æ 21‚ÇΩ','–•–æ–ª–æ–¥–Ω–æ–µ –º–æ–ª–æ–∫–æ 21‚ÇΩ','–°–ª–∏–≤–∫–∏ 21‚ÇΩ','–•–æ–ª–æ–¥–Ω—ã–µ —Å–ª–∏–≤–∫–∏ 21‚ÇΩ']
const alternative_addons = ['–ù–∞–∑–∞–¥','–≠—Ñ–∏–æ–ø–∏—è','–ö–µ–Ω–∏—è','–ö–æ–ª—É–º–±–∏—è','–†—É–∞–Ω–¥–∞']
const replyOptions = Markup.inlineKeyboard([
  Markup.payButton('üí∏ Buy'),
  Markup.urlButton('‚ù§Ô∏è', 'http://telegraf.js.org')
]).extra()

const bot = new Telegraf('533773646:AAE_SpgrQ-f0C79JEItux0dWfy9uk0Lq5-Y')

bot.start((ctx) => {
  var query = con.query("SELECT chat_id, status FROM coffee WHERE chat_id = "+ctx.from.id+"", function (err, result, fields) {
    if (err) throw err;
    console.log(result[0]);
    if(result[0] == undefined){
      var sql = "INSERT INTO coffee (chat_id, user_name) VALUES ("+ctx.from.id+", '"+ctx.from.username+"')";
      con.query(sql, function (err, result) {
        if (err) throw err;
        console.log("User recorded to database");
      });
      ctx.reply('–ü—Ä–∏–≤–µ—Ç, –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏ –º–Ω–µ /start')
    }else{
      var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
      hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
      console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
      updateStatus(1,ctx.from.id)
    }
  })
})
bot.on('pre_checkout_query', ({ answerPreCheckoutQuery }) => answerPreCheckoutQuery(true))
bot.on('successful_payment', (ctx) => {
    console.log('Payed successful')
    var chat_id = ctx.from.id
    ctx.reply('–ñ–¥–µ–º –≤–∞—Å –Ω–∞ –ë–µ–ª–∏–Ω—Å–∫–æ–≥–æ 51')
    //easy_keyboard(chat_id, "–ñ–¥–µ–º –≤–∞—Å –ø–æ –∞–¥—Ä–µ—Å—É –ë–µ–ª–∏–Ω—Å–∫–æ–≥–æ 51.\n–°–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥–æ–∑–∞–∫–∞–∑–∞—Ç—å",['–ù–∞–∑–∞–¥','–ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω.'])
    var query = con.query("SELECT id, chat_id, status, time, coffee, price, comment FROM coffee WHERE chat_id = "+chat_id+"", function (err, result, fields) {
        if (err) throw err;
        var status = result[0].status;
        var replace = result[0].coffee.split('$').join('\n')
        var id = result[0].id
        var keyboard = ''
        var time = parseInt(result[0].time)
        var query1 = con.query("SELECT comment FROM coffee WHERE chat_id = 548789421", function (err, result, fields) {
            if (err) throw err;
            keyboard = result[0].comment + '–ü–†–ò–ì–û–¢–û–í–ò–õ –∑–∞–∫–∞–∑ #'+id+' –í '+moment().add(time, 'minutes').format('LT') + '$'
            var sql = "UPDATE coffee SET comment = '"+keyboard+"' WHERE chat_id = 548789421";
                con.query(sql, function (err, result) {
                if (err) throw err;
            })
        var n = 0
        function reminders(ctx,chat_id,replace,time,keyboard,n){
            var status = con.query("SELECT id, status FROM coffee WHERE chat_id = "+chat_id+"", function (err, res, fields) {
                if (err) throw err;
                time = time - n
                if(res[0].status !== 200){
                    ctx.telegram.sendMessage(548789421, '–ó–∞–∫–∞–∑ #'+id, Markup
                        .keyboard(keyboard)
                        .oneTime()
                        .resize()
                        .extra()
                    )
                   ctx.telegram.sendMessage(548789421, '\n–í—Ä–µ–º—è: '+moment().format('LT')+'\n'+'–ö–ª–∏–µ–Ω—Ç –ø—Ä–∏–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ '+time+' –º–∏–Ω—É—Ç\n\n'+replace+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+result[0].comment, Markup
                        .inlineKeyboard([
                          Markup.callbackButton('–ü—Ä–∏–Ω—è—Ç—å', 'Good:'+chat_id+'')
                          //Markup.callbackButton('–û—Ç–º–µ–Ω–∏—Ç—å', 'Bad:'+chat_id+'')
                        ])
                        .oneTime()
                        .resize()
                        .extra()
                    )
                    setTimeout(reminders, 60000, ctx,chat_id,replace,time,n+1)
                }else{
                    return 0;
                }
            })
        } 
        reminders(ctx,chat_id,replace,time,keyboard.split('$'),n)
        function fiveMinutes(ctx,chat_id,replace,id,n){
            ctx.telegram.sendMessage(548789421, '–ó–∞–∫–∞–∑ #'+id+'\n–í—Ä–µ–º—è: '+moment().format('LT')+'\n'+'!!!–ö–ª–∏–µ–Ω—Ç –ø—Ä–∏–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!!!\n\n'+replace+'\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: '+result[0].comment)
        }
        if((result[0].time - 5) > 0){
            setTimeout(fiveMinutes, (result[0].time*60-300)*1000/*10000*/, ctx,chat_id,replace,id)
        }
            //setTimeout(fiveMinutes, (result[0].time*60-300)*1000/*10000*/, ctx,chat_id,replace,id)
            //console.log(keyboard.split('$'))
        })
        
    })
    //548789421 –°–∞—à–∞ –ü–æ–≥–æ–∂–µ–≤
    //ctx.telegram.sendMessage(83856998, '–ó–∞–∫', `Hello`)
    //ctx.reply('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–∞—Ä–∏—Å—Ç—ã.')
})
/* ---------------------------------*/
// –ë–ê–†–ò–°–¢–ê-
/* ---------------------------------*/
bot.action(/.+/, (ctx) => {
    var arr = ctx.match[0].split(':')
    var answer = arr[0]
    var chat_id = arr[1]
    if(answer == 'Good'){
        console.log(chat_id)
        var query = con.query("SELECT status FROM coffee WHERE chat_id = "+chat_id+"", function (err, result, fields) {
            if (err) throw err;
            if(result[0].status !== 200){
                updateStatus(200, chat_id)
                ctx.telegram.sendMessage(chat_id,'–ë–∞—Ä–∏—Å—Ç–∞ –ø—Ä–∏–Ω—è–ª –≤–∞—à –∑–∞–∫–∞–∑! –ñ–¥–µ–º :)')
            }
        })
    }
    if(ctx.match[0] == 'BackButton'){
        chat_id = ctx.from.id
        var query = con.query("SELECT id, chat_id, status, time, coffee, price, comment, old_price, coffee_old FROM coffee WHERE chat_id = "+chat_id+"", function (err, result, fields) {
            if (err) throw err;
            var status = result[0].status
            if(status == 1){
                var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
            }
            if(status == 2 || status == 22){
                var price_1 = 0
                var order = result[0].coffee.split('$')
                console.log(order)
                order.pop()
                order.pop()
                console.log(order)
                /*var query = con.query("UPDATE coffee SET old_price = "+result[0].price+", coffee = '"+order.join("$")+"$', status = 1 WHERE chat_id = "+chat_id+"", function (err, result, fields) {
                    if (err) throw err;
                    console.log('Price replaced')
                    var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                    hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                })*/
            }
            if(status == 3){
                easy_keyboard(ctx,'–í—ã–±—Ä–∞—Ç—å –µ—â–µ –∫–æ—Ñ–µ?', ['–ù–∞–∑–∞–¥','–í—ã–±—Ä–∞—Ç—å –µ—â–µ','–ó–∞–∫–æ–Ω—á–∏—Ç—å'])
                updateStatus(2,ctx)
            }
            if(status == 4){
                ctx.reply('–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É')
                updateStatus(3,chat_id)
            }
            if(status == 19){
                easy_keyboard(ctx,'–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',['–ù–∞–∑–∞–¥','–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'])
                updateStatus(19, chat_id)
            }
            if(status == 21 || status == 17 || status == 18 || status == 20){
                var order = result[0].coffee.split('$')
                console.log(order)
                order.pop()
                console.log(order)
                var query = con.query("UPDATE coffee SET coffee = '"+order.join("$")+"$', status = 1 WHERE chat_id = "+chat_id+"", function (err, result, fields) {
                    if (err) throw err;
                    console.log('status 21 replaced')
                    var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                    hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                })
            }
            if(status == 6){
                hard_keyboard(ctx,'–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–∫–∞–∑', ['–û–ø–ª–∞—Ç–∞','','–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è','','–£–¥–∞–ª–∏—Ç—å','–î–æ–∑–∞–∫–∞–∑'])
                updateStatus(5,chat_id)
            }
        })
    }
})
/* ---------------------------------*/
// –ö–õ–ò–ï–ù–¢
/* ---------------------------------*/
bot.on('message', (ctx) => {
    var chat_id = ctx.from.id;
    var query = con.query("SELECT id, chat_id, status, time, coffee, price, comment, old_price, coffee_old FROM coffee WHERE chat_id = "+chat_id+"", function (err, result, fields) {
        if (err) throw err;
        if(result[0] == undefined){
          var sql = "INSERT INTO coffee (chat_id, user_name) VALUES ("+ctx.from.id+", '"+ctx.from.username+"')";
          con.query(sql, function (err, result) {
            if (err) throw err;
            console.log("User recorded to database");
          });
          ctx.reply('–ü—Ä–∏–≤–µ—Ç, –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏ –º–Ω–µ /start')
        }else{
            var status = result[0].status;
            var answer = ctx.message.text
            var replace = result[0].coffee.split('$').join('\n')
            if(answer == '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑'){
                var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                updateStatus(1, chat_id);
                console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
            }
            if(answer.indexOf('–ü–†–ò–ì–û–¢–û–í–ò–õ') >= 0){
                if(result[0].comment !== ''){
                    var enter = result[0].comment.split('$')
                    var test = result[0].comment.split(' ')
                    var id = parseInt(retnum(test[2]), 10)
                    enter.pop()
                    console.log(enter)
                    for (var i = 0; i < enter.length; i++) {
                        if(answer == enter[i]){
                            enter.splice(i,1)
                        }
                    }
                    var query = con.query("UPDATE coffee SET comment = '"+enter.join('$')+"$' WHERE chat_id = "+chat_id+"", function (err, result, fields) {
                        if (err) throw err;
                        if((enter.length == 1 && enter[0] == '') || enter.length == 0){
                            ctx.telegram.sendMessage(548789421, '–ó–∞–∫–∞–∑ #'+id+' –í—ã–ø–æ–ª–Ω–µ–Ω! :))')
                            var query = con.query("UPDATE coffee SET comment = '' WHERE chat_id = "+chat_id+"", function (err, res, fields) {
                                if (err) throw err;
                            })
                        }else{
                            ctx.telegram.sendMessage(548789421, '–ó–∞–∫–∞–∑ #'+id+' –í—ã–ø–æ–ª–Ω–µ–Ω! :))', Markup
                                .keyboard(enter)
                                .oneTime()
                                .resize()
                                .extra()
                            )
                        }
                    })
                    var query = con.query("SELECT chat_id FROM coffee WHERE id = "+id+"", function (err, res, fields) {
                        if (err) throw err;
                        var query = con.query("DELETE FROM `coffee` WHERE `coffee`.`id` = "+id+"", function (err, result, fields) {
                            if (err) throw err;
                            ctx.telegram.sendMessage(res[0].chat_id, '–í–∞—à –∑–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω!')
                        })
                    })
                }
            }        
            if(status == 1){
                console.log(black)
                if(answer == '–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ'){
                    easy_keyboard(ctx, '–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ', black)
                    updateStatus(17, chat_id)
                }
                if(answer == '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º'){
                    easy_keyboard(ctx, '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º', classic)
                    updateStatus(17, chat_id)
                }
                if(answer == '–ê–≤—Ç–æ—Ä—Å–∫–∏–µ'){
                    easy_keyboard(ctx, '–ê–≤—Ç–æ—Ä—Å–∫–∏–µ', author)
                    updateStatus(30, chat_id)
                }
                if(answer == '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ'){
                    easy_keyboard(ctx, '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ', alternative)
                    updateStatus(21, chat_id)
                }
                if(answer == '–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ'){
                    easy_keyboard(ctx, '–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ', chocolate)
                    updateStatus(17, chat_id)
                }
                if(answer == '–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'){
                    easy_keyboard(ctx, '–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º', soeviy)
                    updateStatus(17,chat_id)
                }
            }
            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π
            if(status == 21){
                if(answer !== '–ù–∞–∑–∞–¥'){
                    easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+answer+'\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É',alternative_addons)
                    var price = parseInt(retnum(answer), 10)
                    console.log(price)
                    var sql = "UPDATE coffee SET coffee_old = '"+answer+"', old_price = "+price+", status = 22 WHERE chat_id = "+chat_id+"";
                        con.query(sql, function (err, result) {
                          if (err) throw err;
                          console.log(result.affectedRows + " record(s) updated");
                    });
                }else{
                    var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                    hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                    updateStatus(1, chat_id);
                    console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
                }
            }
            if(status == 22){
                if(answer !== '–ù–∞–∑–∞–¥'){
                    easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+answer,['–ù–∞–∑–∞–¥','–í—ã–±—Ä–∞—Ç—å –µ—â–µ','–ó–∞–∫–æ–Ω—á–∏—Ç—å'])
                    var enter = result[0].coffee_old + answer
                    var sql = "UPDATE coffee SET coffee_old = '"+enter+"', status = 2 WHERE chat_id = "+chat_id+"";
                        con.query(sql, function (err, result) {
                          if (err) throw err;
                          console.log(result.affectedRows + " record(s) updated");
                    });
                }else{
                    updateStatus(1,chat_id)
                    var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                    hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                }
                
            }
            /*if(status == 22){
                if(answer !== '–ù–∞–∑–∞–¥'){
                    easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+answer,['–ù–∞–∑–∞–¥','–í—ã–±—Ä–∞—Ç—å –µ—â–µ','–ó–∞–∫–æ–Ω—á–∏—Ç—å'])
                    var enter = result[0].coffee + answer
                    var sql = "UPDATE coffee SET coffee = '"+enter+"', status = 2 WHERE chat_id = "+chat_id+"";
                        con.query(sql, function (err, result) {
                          if (err) throw err;
                          console.log(result.affectedRows + " record(s) updated");
                    });
                }else{
                    var price_1 = 0
                    var order = result[0].coffee.split('$')
                    order.pop()
                    var query = con.query("UPDATE coffee SET old_price = "+result[0].price+", coffee = '"+order.join("$")+"', status = 1 WHERE chat_id = "+chat_id+"", function (err, result, fields) {
                        if (err) throw err;
                        console.log('Price replaced')
                        var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                        hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                    })
                }
                
            }*/
            // –ê–≤—Ç–æ—Ä—Å–∫–∏–µ
            if(status == 30){
                easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+answer,['–ù–∞–∑–∞–¥','–í—ã–±—Ä–∞—Ç—å –µ—â–µ','–ó–∞–∫–æ–Ω—á–∏—Ç—å'])
                var old_price = parseInt(retnum(answer), 10)
                var sql = "UPDATE coffee SET coffee_old = '"+answer+"', old_price = "+old_price+", status = 2 WHERE chat_id = "+chat_id+"";
                    con.query(sql, function (err, result) {
                      if (err) throw err;
                      console.log(result.affectedRows + " record(s) updated");
                });
            }
            // –î–û–ë–ê–í–ö–ò!!!
            if(status == 17){
                if(answer !== '–ù–∞–∑–∞–¥'){
                    easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+answer+'\n–°–∞—Ö–∞—Ä, —Å–ø–µ—Ü–∏–∏, —Å–∏—Ä–æ–ø—ã, –ø–æ–≥–æ—Ä—è—á–µ–µ?.',['–ù–∞–∑–∞–¥','–î–∞','–°–ø–∞—Å–∏–±–æ, –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'])
                    //var enter = result[0].coffee_old + answer
                    var old_price = result[0].old_price + parseInt(retnum(answer), 10)
                    var sql = "UPDATE coffee SET coffee_old = '"+answer+"', old_price = "+old_price+", status = 18 WHERE chat_id = "+chat_id+"";
                        con.query(sql, function (err, result) {
                          if (err) throw err;
                    });
                }else{
                    var order = result[0].coffee_old.split('+')
                    var price = result[0].old_price - parseInt(retnum(order[order.length]), 10)
                    if(order.length == 0){
                        // –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ 
                        var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                        hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                        updateStatus(1, chat_id);
                        console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
                    }else{
                        console.log(order)
                        order.pop()
                        console.log(order)
                        var query = con.query("UPDATE coffee SET old_price = "+result[0].old_price+", coffee_old = '"+order.join("+")+"', status = 1 WHERE chat_id = "+chat_id+"", function (err, result, fields) {
                            if (err) throw err;
                            console.log('status 2')
                            easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+order.join("+")+'\n–°–∞—Ö–∞—Ä, —Å–ø–µ—Ü–∏–∏, —Å–∏—Ä–æ–ø—ã, –ø–æ–≥–æ—Ä—è—á–µ–µ?.',['–ù–∞–∑–∞–¥','–î–∞','–°–ø–∞—Å–∏–±–æ, –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'])
                        })
                    }
                }
            }
            if(status == 18){
                if(answer !== '–ù–∞–∑–∞–¥'){
                    if(answer !== '–°–ø–∞—Å–∏–±–æ, –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'){
                        easy_keyboard(ctx,'–î–æ–±–∞–≤–∫–∏:', addons)
                        updateStatus(20, chat_id)
                    }else{
                        var enter = result[0].coffee_old
                        var sql = "UPDATE coffee SET coffee_old = '"+enter+"', status = 2 WHERE chat_id = "+chat_id+"";
                        con.query(sql, function (err, result) {
                          if (err) throw err;
                          console.log(result.affectedRows + " record(s) updated");
                        });
                        easy_keyboard(ctx,'–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∑–∞–∫–∞–∑', ['–ù–∞–∑–∞–¥','–í—ã–±—Ä–∞—Ç—å –µ—â–µ','–ó–∞–∫–æ–Ω—á–∏—Ç—å'])
                    }
                }else{
                    var order = result[0].coffee_old.split('+')
                    var length = order.length
                    console.log(length)
                    var price = result[0].old_price - parseInt(retnum(order[length-1]), 10)
                    console.log(price)
                    if(isNaN(price)){
                        price = result[0].old_price
                        console.log('–≠–¢–û –ì–û–í–ù–û –ò–ó –ù–ê–ù!')
                    }else{
                        console.log('–≠–¢–û –ì–û–í–ù–û –ù–ï –ò–ó –ù–ê–ù!!!!!((!(!(!(((!')
                    }
                    if(order.length == 1){
                        // –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ 
                        var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                        hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                        updateStatus(1, chat_id);
                        console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
                    }else{
                        console.log(order)
                        order.pop()
                        console.log(order)
                        var query = con.query("UPDATE coffee SET old_price = "+price+", coffee_old = '"+order.join("+")+"' WHERE chat_id = "+chat_id+"", function (err, result, fields) {
                            if (err) throw err;
                            console.log('status 2')
                            easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+order.join("+")+'\n–°–∞—Ö–∞—Ä, —Å–ø–µ—Ü–∏–∏, —Å–∏—Ä–æ–ø—ã, –ø–æ–≥–æ—Ä—è—á–µ–µ?.',['–ù–∞–∑–∞–¥','–î–∞','–°–ø–∞—Å–∏–±–æ, –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'])
                        })
                    }
                }
            }
            // –î–û–ë–ê–í–ö–ò –ü–†–û–î–û–õ–ñ–ï–ù–ò–ï
            if(status == 20){
                if(answer !== '–ù–∞–∑–∞–¥'){
                    if(answer !== '–î–æ–±–∞–≤–∏—Ç—å —Å–∏—Ä–æ–ø'){
                        var enter = result[0].coffee_old + ' + ' + answer
                        var old_price = result[0].old_price + parseInt(retnum(answer), 10)
                        if(!isNaN(old_price) && parseInt(retnum(answer), 10) > 20){
                            var sql = "UPDATE coffee SET coffee_old = '"+enter+"', old_price = "+old_price+", status = 18 WHERE  chat_id = "+chat_id+"";
                                con.query(sql, function (err, result) {
                                  if (err) throw err;
                                  console.log(result.affectedRows + " record(s) updated");
                            });
                        }else{
                            var sql = "UPDATE coffee SET coffee_old = '"+enter+"', status = 18 WHERE chat_id = "+chat_id+"";
                                con.query(sql, function (err, result) {
                                  if (err) throw err;
                                  console.log(result.affectedRows + " record(s) updated");
                            });
                        }
                        easy_keyboard(ctx,'–í—ã –≤—ã–±—Ä–∞–ª–∏ '+answer+'\n–°–∞—Ö–∞—Ä, —Å–ø–µ—Ü–∏–∏, —Å–∏—Ä–æ–ø—ã, –ø–æ–≥–æ—Ä—è—á–µ–µ?',['–ù–∞–∑–∞–¥','–î–∞','–°–ø–∞—Å–∏–±–æ, –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'])
                    }else if(answer == '–î–æ–±–∞–≤–∏—Ç—å —Å–∏—Ä–æ–ø'){
                        easy_keyboard(ctx,'–í—ã–±–µ—Ä–∏—Ç–µ —Å–∏—Ä–æ–ø!',syrop)
                    }
                }else{
                    var order = result[0].coffee_old.split('+')
                    var price = result[0].old_price - parseInt(retnum(order[order.length]), 10)
                    if(order.length == 0){
                        // –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ 
                        var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                        hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                        updateStatus(1, chat_id);
                        console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
                    }else{
                        console.log(order)
                        order.pop()
                        console.log(order)
                        var query = con.query("UPDATE coffee SET old_price = "+result[0].old_price+", coffee_old = '"+order.join("+")+"', status = 1 WHERE chat_id = "+chat_id+"", function (err, result, fields) {
                            if (err) throw err;
                            console.log('status 2')
                            easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+order.join("+")+'\n–°–∞—Ö–∞—Ä, —Å–ø–µ—Ü–∏–∏, —Å–∏—Ä–æ–ø—ã, –ø–æ–≥–æ—Ä—è—á–µ–µ?.',['–ù–∞–∑–∞–¥','–î–∞','–°–ø–∞—Å–∏–±–æ, –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'])
                        })
                    }    
                }
            }
            if(status == 2){
                var x = 0
                for (var i = 0; i < author.length; i++) {
                    if(answer == author[i]){
                        x = 1
                    }
                }
                if(x == 0){
                    if(answer !== '–ù–∞–∑–∞–¥'){
                        var price = result[0].price + result[0].old_price
                        var sql = "UPDATE coffee SET coffee = '"+result[0].coffee+result[0].coffee_old+"$', coffee_old = '', price = '"+price+"' WHERE  chat_id = "+chat_id+"";
                            con.query(sql, function (err, result) {
                              if (err) throw err;
                              console.log(result.affectedRows + " record(s) updated");
                        });
                        if(answer == '–í—ã–±—Ä–∞—Ç—å –µ—â–µ'){
                            var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                            hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                            updateStatus(1, chat_id);
                        }
                        if(answer == '–ó–∞–∫–æ–Ω—á–∏—Ç—å'){
                            easy_keyboard(ctx,'–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É',['–ù–∞–∑–∞–¥'])
                            updateStatus(3, chat_id)
                        }
                    }else{
                        var order = result[0].coffee_old.split('+')
                        var price = result[0].old_price - parseInt(retnum(order[order.length]), 10)
                        if(order.length == 0){
                            // –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ 
                            var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                            hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                            updateStatus(1, chat_id);
                            console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
                        }else{
                            console.log(order)
                            order.pop()
                            console.log(order)
                            var query = con.query("UPDATE coffee SET old_price = "+result[0].old_price+", coffee_old = '"+order.join("+")+"', status = 1 WHERE chat_id = "+chat_id+"", function (err, result, fields) {
                                if (err) throw err;
                                console.log('status 2')
                                easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+order.join("+")+'\n–°–∞—Ö–∞—Ä, —Å–ø–µ—Ü–∏–∏, —Å–∏—Ä–æ–ø—ã, –ø–æ–≥–æ—Ä—è—á–µ–µ?.',['–ù–∞–∑–∞–¥','–î–∞','–°–ø–∞—Å–∏–±–æ, –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'])
                            })
                        }
                    }
                }else{
                    if(answer !== '–ù–∞–∑–∞–¥'){
                        var sql = "UPDATE coffee SET coffee = '"+result[0].coffee+result[0].coffee_old+"$', coffee_old = '', price = '"+result[0].old_price+"' WHERE  chat_id = "+chat_id+"";
                            con.query(sql, function (err, result) {
                              if (err) throw err;
                              console.log(result.affectedRows + " record(s) updated");
                        });
                        if(answer == '–í—ã–±—Ä–∞—Ç—å –µ—â–µ'){
                            var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                            hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                            updateStatus(1, chat_id);
                        }
                        if(answer == '–ó–∞–∫–æ–Ω—á–∏—Ç—å'){
                            easy_keyboard(ctx,'–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É',['–ù–∞–∑–∞–¥'])
                            updateStatus(3, chat_id)
                        }
                    }else{
                        var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                        hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                        updateStatus(1, chat_id);
                        console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
                    }
                }
            }
            if(status == 3){
                if(answer !== '–ù–∞–∑–∞–¥'){
                    if (!isNaN(answer)) {
                        easy_keyboard(ctx,'–û–∂–∏–¥–∞—Ç—å –≤–∞—Å —á–µ—Ä–µ–∑ '+answer+' –º–∏–Ω—É—Ç?',['–î–∞','–ù–µ—Ç',''])
                        var sql = "UPDATE coffee SET time = '"+answer+"', status = 4 WHERE chat_id = "+chat_id+"";
                                con.query(sql, function (err, result) {
                                if (err) throw err;
                                console.log('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω');
                        });
                    }else{
                        ctx.reply('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')
                    }
                }else{
                    updateStatus(1, chat_id)
                    var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                    hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                }
                
            }
            if(status == 4){
                if(answer !== '–ù–∞–∑–∞–¥'){
                    if(answer == '–î–∞'){
                        easy_keyboard(ctx,'–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',['–ù–∞–∑–∞–¥','–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'])
                        updateStatus(19, chat_id)
                    }else{
                        ctx.reply('–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É')
                        updateStatus(3, chat_id)
                    }
                }else{
                    easy_keyboard(ctx,'–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É',['–ù–∞–∑–∞–¥'])
                    updateStatus(3, chat_id)
                }
                
            }
            if(status == 19){
                if(answer !== '–ù–∞–∑–∞–¥'){
                    if(answer !== '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'){
                        var sql = "UPDATE coffee SET comment = '"+answer+"', status = 5 WHERE chat_id = "+chat_id+"";
                            con.query(sql, function (err, result) {
                            if (err) throw err;
                            console.log('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω');
                        });
                    }else{
                        updateStatus(5, chat_id)
                    }
                    hard_keyboard(ctx,'–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–∫–∞–∑', ['–û–ø–ª–∞—Ç–∞','','–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è','','–£–¥–∞–ª–∏—Ç—å','–î–æ–∑–∞–∫–∞–∑'])
                }else{
                    easy_keyboard(ctx,'–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É',['–ù–∞–∑–∞–¥'])
                    updateStatus(3, chat_id)
                }
            }
            if(status == 5){
                if(answer == '–û–ø–ª–∞—Ç–∞'){
                    ctx.replyWithInvoice(invoice_func(replace,parseInt(result[0].price, 10)*100))
                }
                if(answer == '–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è'){
                    ctx.reply('–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É')
                    updateStatus(3,chat_id)
                }
                if(answer == '–£–¥–∞–ª–∏—Ç—å'){
                    var order = result[0].coffee.split('$')
                    easy_keyboard(ctx,'–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∫–∞–∫–æ–π-—Ç–æ —Ç–æ–≤–∞—Ä –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.',order)
                    updateStatus(6, chat_id)
                }
                if(answer == '–î–æ–∑–∞–∫–∞–∑'){
                    var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                    hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                    updateStatus(1,chat_id)
                }
            }
            // –£–¥–∞–ª–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å
            if(status == 6){
                var price_1 = 0
                var order = result[0].coffee.split('$')
                console.log(order)
                order.pop()
                for (var i = 0; i <= order.length; i++) {
                    if(answer == order[i]){
                        order.splice(i,1)
                        var answ = answer.split('+')
                        for (var k = 0; k < answ.length; k++) {
                            price_1 = price_1 + parseInt(retnum(answ[k]), 10)
                        }
                        price_1 = result[0].price - price_1
                        console.log(order)
                        console.log(order.length)
                        if((order.length == 1 && order[0] == '') || order.length == 0){
                            var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ','–ö–æ—Ñ–µ —Å —Å–æ–µ–≤—ã–º –º–æ–ª–æ–∫–æ–º'];
                            var sql = "UPDATE coffee SET coffee = '', price = 0, status = 1 WHERE chat_id = "+chat_id+"";
                                con.query(sql, function (err, result) {
                                if (err) throw err;
                                hard_keyboard(ctx, '–í–∞—à –∑–∞–∫–∞–∑ –ø—É—Å—Ç, –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑ –º–µ–Ω—é', array);
                            });
                            //updateStatus(1, chat_id);
                            console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
                        }else{
                            var sql = "UPDATE coffee SET coffee = '"+order.join("$")+"$', price = "+price_1+", status = 5 WHERE chat_id = "+chat_id+"";
                                con.query(sql, function (err, result) {
                                if (err) throw err;
                                hard_keyboard(ctx,'–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω', ['–û–ø–ª–∞—Ç–∞','','–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è','','–£–¥–∞–ª–∏—Ç—å','–î–æ–∑–∞–∫–∞–∑'])
                            });
                        }
                    }
                }
            }
            if(status == 200){
                ctx.reply('–ú—ã –≤–∞—Å –∂–¥–µ–º! :)\n–ë–µ–ª–∏–Ω—Å–∫–æ–≥–æ 51')
            }
        }
    })
})
bot.command('/qwe', (ctx) => {
    console.log('menu view')
})
//bot.command('/buy', ({ replyWithInvoice }) => replyWithInvoice(invoice, replyOptions))
function updateStatus(status, chat_id){
    var sql = "UPDATE coffee SET status = "+status+" WHERE chat_id = "+chat_id+"";
        con.query(sql, function (err, result) {
        if (err) throw err;
        console.log(result.affectedRows + " record(s) updated");
    });
}
function easy_keyboard(ctx,text,array){
    var array_func = array
    //console.log(array_func.unshift('–ù–∞–∑–∞–¥'));
    ctx.reply(text, Markup
        .keyboard(array_func)
        .oneTime()
        .resize()
        .extra()
    )
    //setTimeout(backButton, 100, ctx) 
}
function backButton(ctx){
    ctx.reply('.', Extra.HTML().markup((m) =>
        m.inlineKeyboard([
          m.callbackButton('–ù–∞–∑–∞–¥', 'BackButton')
    ]))) 
}
function hard_keyboard(ctx,text,array){
    ctx.reply(text, Markup
        .keyboard([
          [array[0],array[1]],
          [array[2],array[3]],
          [array[4],array[5]]
        ])
        .oneTime()
        .resize()
        .extra()
    )
}
// menu func

function menu(ctx){
    ctx.reply(text, Markup
        .keyboard([
            ('coke', 'test'),
            'prostakola'
            ])
        .oneTime()
        .resize()
        .extra()
    )
}

function invoice_func(order, price){
    const invoice = {
      provider_token: '401643678:TEST:051715d5-9cf9-4f4b-b63f-e92728c26e60',
      start_parameter: 'coffee',
      title: '–ó–∞–∫–∞–∑',
      description: order,
      currency: 'rub',
      photo_url: 'https://pbs.twimg.com/profile_images/520085024968671233/ul2Omvpm.jpeg',
      prices: [
        { label: '–ó–∞–∫–∞–∑', amount: price }
      ],
      payload: {
        coupon: 'test'
      }
    }
    return invoice
}
function retnum(str) { 
    var num = str.replace(/[^0-9]/g, '')
    return num
}

bot.startPolling()